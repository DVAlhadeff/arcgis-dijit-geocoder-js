__NOTOC__
__NOEDITSECTION__

{{#css:/custom/jsapi.css}}

== class esri.dijit.Autocomplete ==
<div style="font-family: consolas, monospace;">
dojo.require("esri.dijit.Autocomplete");<br/>
defined in esri/dijit/Autocomplete.js
</div>

Autocomplete widget provides a ready-to-use widget to locate results from a geocoder.

Changes:

    Localized the 3 labels for clearing results, submitting results and geocoder menu button.
    Moved placeholder to geolocator object.
    Moved outFields to geolocator object.
    Moved searchExtent to geolocator object.
    Added prefix to geolocator object.
    Added postfix to geolocator object.
    Renamed "onAutocomplete" method to "onStart".
    Renamed "onSearch" method to "onSelect".
    Removed unnecessary clear function.
    Renamed "activeGeolocator" property to "activeGeolocatorIndex"
    Added public method "getActiveGeocoder" to return active geocoder object.
    Removed hideDelay
    Added Aria support
    Added "esriGeocoder" property

    -------------

    Removed getActiveGeocoder
    Added activeGeocoder property


Todo:

    Convert to AMD
    Local cache prototype?
    RTL css styles
    Add sourceCountry?

In Progress:

    Graphics request


=== Class hierarchy ===
<pre style="background-color: white; border: none;">
             +------------------------------+
             ¦            Object            ¦
             +------------------------------+
                  &Delta;                   &Delta;
                  |                   |
                  |                   |
         +----------------+  +--------------------+
         ¦  dijit._Widget ¦  ¦  dijit._Templated  ¦
         +----------------+  +--------------------+
                  &Delta;                   &Delta;
                  |                   |
                  |                   |
             +------------------------------+
             ¦  esri.dijit.Autocomplete  ¦
             +------------------------------+
</pre>

=== Constructor ===

{| class="gmaps"
|-
! new esri.dijit.Autocomplete ( params, srcNodeRef )
|-
| Creates a new Autocomplete dijit using the given DOM node.<br/>
<b>Parameters:</b><br/>
{| class="gmaps" style="width:auto;"
|-
! Name
! Type
! Description
|-
| class="code" | params
| class="code" | Object
| Various parameters to configure this dijit. See the list below for details.
|-
| class="code" | srcNodeRef
| class="code" | DOMNode | String
| Reference or id of a HTML element that this dijit is rendered into. This parameter is always required.
|}
<br/>
The following parameters are supported:
{| class="gmaps" style="width:auto;"
|-
! Name
! Type
! Description
|-
| class="code" | map
| class="code" | Map
| Map object that this dijit is associated with. This parameter is always required.
|-
| class="code" | geocoder
| class="code" | Array or String
| Optional. Defines geocoders to be used. These will be used alongside the esriGeocoder if "esriGeocoder" is true.
  [
    {
        url: <String> Required, // URL of the geocoder
        name: <String> Required, // Name of the geocoder
        placeholder: <String> Optional, // Input box placeholder text
        outFields: <String> Optional, // Out fields
        prefix: <String> Optional, // prepended to the search string
        postfix: <String> Optional, // appended to the search string
        searchExtent: <Extent> Optional, // constrain search to specified extent
        zoom: <Number> Optional // If specified, zooms to this level when geocoding
    },
    {
        url: <String> Required, // URL of the geocoder
        name: <String> Required, // Name of the geocoder
        placeholder: <String> Optional, // Input box placeholder text
        outFields: <String> Optional, // Out fields
        prefix: <String> Optional, // prepended to the search string
        postfix: <String> Optional, // appended to the search string
        searchExtent: <Extent> Optional, // constrain search to specified extent
        zoom: <Number> Optional // If specified, zooms to this level when geocoding
    }
  ]
|
|-
| class="code" | theme
| class="code" | String
| Optional. Adds the theme class to the container node of the widget for styling. Default: 'esriAutocomplete'.
|-
| class="code" | maxLocations
| class="code" | Number
| Optional. Maxiumum number of results to return in the autocomplete. Default: 6.
|-
| class="code" | minCharacters
| class="code" | Number
| Optional. Minimum amount of characters required to be entered into the search field before querying for autocomplete results. Default: 3.
|-
| class="code" | searchDelay
| class="code" | Number
| Optional. Number of milliseconds before querying for autocomplete results. Default: 350.
|-
| class="code" | geocoderMenu
| class="code" | Boolean
| Optional. If set false, the geolocator menu will not be shown when more than 1 geocoder is set. Default: true.
|-
| class="code" | esriGeocoder
| class="code" | Boolean
| Optional. If set false, the esri world geolocator will be disabled. Default: true.
|}

|}


=== Properties ===

{| class="gmaps" style="width:auto;"
|-
! Property
! Type
! Description

|-
| class="code" | value
| class="code" | String
| Current value of the Autocomplete input textbox
|-
| class="code" | activeGeocoder
| class="code" | Object
| Currently selected locator object.
|-
| class="code" | activeGeocoderIndex
| class="code" | Number
| Current locator index to search by default. Defaults to 0 on init.
|-
| class="code" | results
| class="code" | Array
| Current results from autocomplete or select. default. Defaults to empty array.
|-
| class="code" | geocoder
| class="code" | Array
| List of geocoders for widget.
|-
| class="code" | theme
| class="code" | String
| Current theme class being used.
|-
| class="code" | maxLocations
| class="code" | Number
| Maximum locations to display in the results menu.
|-
| class="code" | minCharacters
| class="code" | Number
| Minimum characters required before query is performed.
|-
| class="code" | searchDelay
| class="code" | Number
| Delay before each keyUp calls for query to be performed.
|-
| class="code" | geocoderMenu
| class="code" | Boolean
| Whether or not the geocoder menu is enabled.
|}


=== Methods ===

{| class="gmaps"
|-
! Methods
! Return Value
! Description
|-
| class="code" | startup()
| class="code" | none
| Finalizes the creation of this dijit. This method should be called after the constructor for this dijit is called and before letting the users interact with it.
|-
| class="code" | destroy()
| class="code" | none
| Releases all resources used by the dijit. This method should be called when an instance of this dijit is no longer needed in your application.
|-
| class="code" | clear()
| class="code" | none
| Clears any value currently set in the autocomplete.
|-
| class="code" | hide()
| class="code" | none
| Hides the autocomplete widget.

|-
| class="code" | show()
| class="code" | none
| Shows the autocomplete widget.


|}

=== Events===

{| class="gmaps"
|-
! Event
! Return Value
! Description
|-
| class="code" | onSelect
| class="code" | Object
| Event is fired when a result has been selected, the submit button is pressed or enter key is fired. Returns the result object.
|-
| class="code" | onStart
| class="code" | none
| Event is fired when autocomplete has started.
|-
| class="code" | onResults
| class="code" | Array
| Event is fired when there results are returned from an autocomplete and an array of objects is returned.
|}


=== CSS Classes ===

The following table lists the CSS class names defined by the basemap gallery to refer to the DOM nodes that it creates. These class names can be used to customize the look and feel of this widget in your application.

{| class="gmaps"
|-
! Class Name
! Description
|-
| class="code" | esriAc
| Represents a node where an instance of the autocomplete widget is rendered.
|-
| class="code" | esriAcActive
| This class is applied to the esriAc node when the autocomplete results menu is currently active.
|-
| class="code" | esriAcLoading
| Shows loading spinner inside of textbox container
|-
| class="code" | esriAcResults
| Results menu container
|-
| class="code" | esriAcResult
| Result item
|-
| class="code" | esriAcResultEven
| Even result item
|-
| class="code" | esriAcResultOdd
| Odd result item
|-
| class="code" | esriAcResultPartial
| Partially matched text inside result item
|-
| class="code" | esriAcSearch
| Search button
|-
| class="code" | esriAcReset
| Reset button
|-
| class="code" | esriAcResetActive
| Shown when search box is populated and reset button is visible
|-
| class="code" | esriAcMenu
| Geocoder menu
|-
| class="code" | esriAcMenuHeader
| Geocoder menu header
|-
| class="code" | esriAcMenuClose
| Geocoder menu close button
|-
| class="code" | esriAcMenuActive
| Shown when geocoder menu is shown
|-
| class="code" | esriAcMenuArrow
| Button to show goeocoder menu inside the textbox container node
|-
| class="code" | esriAcSelected
| Geocoder item that is currently being used
|-
| class="code" | esriAcSelectedCheck
| Checkmark node for currently selected geocoder item
|-
| class="code" | esriAcClearFloat
| Class to clear float within nodes
|}

=== Usage ===

==== Create the dijit with default parameters ====
<pre style="border: none;">
 var autocomplete = new esri.dijit.Autocomplete({ map: map }, "autoCompleteDiv");
 autocomplete.startup();

 HTML:

 <div id="map"></div>
 <div id="autoCompleteDiv" style="position: absolute; z-index: 2; top: 20px; left: 100px;"></div>
</pre>


==== Create the dijit with custom parameters ====
<pre style="border: none;">

    var autocomplete = new esri.dijit.Autocomplete({
        theme: 'esriAutocomplete', // Used to add a class to style the autocomplete
        geocoder:[
            {
                url: 'http://dexter2k8/gis/rest/services/IHS_Composite/GeocodeServer',
                name: 'IHS_Composite',
                placeholder: 'Search 2',
                outFields: '*',
                preFix: 'shell',
                postFix 'station',
                searchExtent: map.extent,
                zoom: 12
            }
        ],
        maxLocations: 6,
        minCharacters: 3,
        searchDelay: 350,
        esriGeocoder: true,
        map: map
    }, dojo.byId('search'));
    autocomplete.startup();


 HTML:

 <div id="map"></div>
 <div id="search" style="position: absolute; z-index: 2; top: 20px; left: 100px;"></div>
</pre>


=== Samples ===

http://webninja.esri.com/git/Autocomplete-Widget/index.html

http://webninja.esri.com/git/Autocomplete-Widget/_old/index.html
